BEFORE UPLOAD:
	- norm check sources
	- norm check headers
	- norm check libft
	- relink
	- remove makefile debug variable and it's uses
	- add comments to all functions
	- nm check for forbidden functions
	- remove random ft_printf / printf calls
	- FORBIDDEN FUNCTION CHECK WITH NM

INTERROGATIONS:
	- how does functions get called in c file
	- does function validity need to be checked in the middle of the program
	  while performing the pipes or does it need to be done before
	- how does creating, appending and overwriting files work?
	- [IMP] what to do when empty string is given for function:
		* empty strings will probably cause ac to not match the number of functions
		  This would probably lead to segfault as loop goes out of scope
		* solution: keep an int in pipex struct with number of functions
		* should I even support empty strings?? I want to say no but I'm not sure
		  , I could argue that the pipe operator returns and error if given nothing
		  in between 2 pipes (e.g.: ls | | grep "truc" ----> makes an error)
		  But I still need to not segfault (fini le truc d'abord gros con)
	- [IMP] what does process permissions and user permissions have to do with this project ??


DEBUG:
	- valgrind --leak-check=full --show-leak-kinds=all --track-fds=all

TESTING:
	- empty function strings, file strings
	- test files without execution permission
	- test files that don't exist
	- find other tests and vulnerabilities for files

